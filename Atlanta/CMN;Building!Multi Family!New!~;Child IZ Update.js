true ^ showDebug = false; showMessage = false;
true ^ childId = new Array; childId[0] = childGetByCapType("Housing/Inclusionary Zoning/*/*",capId);
wfTask == "Inclusionary Zoning Review" && wfStatus == "60% AMI Complied" ^ holdId = capId; capId = childId[0]; if(capId != null) closeTask("Inclusionary Zoning Review","60% AMI Complied");  tsiArray = new Array();  loadTaskSpecific(tsiArray,holdId);  editAppSpecific("Units proposed as Affordable Housing",tsiArray["Number of Affordable Units Proposed"],capId); capId = holdId;
wfTask == "Inclusionary Zoning Review" && wfStatus == "80% AMI Complied" ^ holdId = capId; capId = childId[0]; if(capId != null) closeTask("Inclusionary Zoning Review","80% AMI Complied");  tsiArray = new Array();  loadTaskSpecific(tsiArray,holdId);  editAppSpecific("Units proposed as Affordable Housing",tsiArray["Number of Affordable Units Proposed"],capId); capId = holdId;
wfTask == "Inclusionary Zoning Review" && wfStatus == "No Review Required" ^ holdId = capId; capId = childId[0]; if(capId != null) closeTask("Inclusionary Zoning Review","No Review Required");  tsiArray = new Array();  loadTaskSpecific(tsiArray,holdId);  editAppSpecific("Units proposed as Affordable Housing",tsiArray["Number of Affordable Units Proposed"],capId); capId = holdId;
wfTask == "Inclusionary Zoning Review" && wfStatus == "Invoice In-Lieu Fee" ^ holdId = capId; capId = childId[0]; if(capId != null) editAppSpecific("In-Lieu Fee Applied","Yes");  closeTask("Inclusionary Zoning Review","Invoice In-Lieu Fee");  tsiArray = new Array();  loadTaskSpecific(tsiArray,holdId);  editAppSpecific("Units proposed as Affordable Housing",tsiArray["Number of Affordable Units Proposed"],capId);  branch("CMN:Housing/Inclusionary Zoning/*/*:Assess Fees"); capId = holdId;
wfTask == "Inclusionary Zoning Review" && wfStatus == "Revisions Required" ^ holdId = capId; capId = childId[0]; if(capId != null) closeTask("Inclusionary Zoning Review","Revisions Required");  tsiArray = new Array();  loadTaskSpecific(tsiArray,holdId);  editAppSpecific("Units proposed as Affordable Housing",tsiArray["Number of Affordable Units Proposed"],capId); capId = holdId;
wfTask == "Inclusionary Zoning Review" && wfStatus == "Denied" ^ holdId = capId; capId = childId[0]; if(capId != null) closeTask("Inclusionary Zoning Review","Denied");  closeTask("Close","Closed","Denied");  tsiArray = new Array();  loadTaskSpecific(tsiArray,holdId);  editAppSpecific("Units proposed as Affordable Housing",tsiArray["Number of Affordable Units Proposed"],capId); capId = holdId;
wfTask == "Inclusionary Zoning Review" && wfStatus == "In Review" ^ holdId = capId; capId = childId[0]; if(capId != null) updateTask("Inclusionary Zoning Review","In Review"); capId = holdId;
wfTask == "Issue Permit" && wfStatus == "Issued" ^ if(childId[0] != null) childA = childId; for (x in childA) branch("CMN:Building/Multi Family/*/*:Related Balances");
wfTask == "Certificate of Occupancy" && wfStatus == "Issued" ^ if(childId[0] != null) childA = childId; for (x in childA) branch("CMN:Building/Multi Family/*/*:Related Balances");
wfTask == "Certificate of Occupancy" && wfStatus == "Issued" && (!isTaskComplete("Inclusionary Zoning Review") || taskStatus("Compliance Sign Off", "",childId[0]) != "Approved to CO") ^ comment("Inclusionary Zoning Review task was not complete or Housing's Inclusionary Zoning record was not signed off to allow C/O.  Refer to related IZ record."); showMessage = true;  cancel = true;