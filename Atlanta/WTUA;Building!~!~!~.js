wfTask.equals("Arborist Preliminary Review") && wfStatus.equals("Accepted Plan Review") ^ childId = createChild("Building","Arborist","Plan Review","NA",capName);  copyAppSpecific(childId);updateAppStatus("Pending - Building","Updated via script",childId);holdId=capId;capId=childId;copyParcelGisObjects();capId = holdId;
wfTask.equals("Arborist Preliminary Review") && wfStatus.equals("Accepted Infrastructure") ^ childId = createChild("Building","Arborist","Infrastructure","NA",capName);  copyAppSpecific(childId);updateAppStatus("Pending - Building","Updated via script",childId);holdId=capId;capId=childId;copyParcelGisObjects();capId = holdId;
wfTask.equals("Final Plan Coordination") && wfStatus.equals("Ready to Issue") ^ branch ("CMN:Building/*/*/*:Technical Related CAPS");
matches(appTypeArray[1],"Commercial","Residential") && matches(wfTask,"Building Plan Review","Plan Coordination") && wfStatus.equals("Calc Impact Fee") ^ var wrkDesc = workDescGet(capId); childId = createChild("Building","Impact Fees","Fees","NA",capName); editAppSpecific("Building Permit #",capIDString,childId); editAppSpecific("Parks Service Area",getGISInfo("Atlanta_AA","Park Service Areas","LABEL1"),childId); holdId = capId; capId = childId; closeTask("Impact Fee Application Intake","Complete","Updated via script",""); capId = holdId;
matches(appTypeArray[1],"Commercial","Residential") && matches(wfTask,"Building Plan Review","Plan Coordination") && wfStatus.equals("Calc Impact Fee") && wrkDesc !=null ^ wd = aa.cap.getCapWorkDesByPK(capId).getOutput(); wdm = wd.getCapWorkDesModel(); wdm.setCapID(childId); aa.cap.createCapWorkDes(wdm);
wfTask.equals("Issue Permit") && wfStatus.equals("Issued") ^ childId = new Array(); childId = getChildren("Building/Impact Fees/Fees/NA",capId);
wfTask.equals("Issue Permit") && wfStatus.equals("Issued") && childId[0] != null ^ holdId = capId; capId = childId[0]; editAppSpecific("Calculation Type","FINAL FEE"); addAppCondition("Building Impact Fee","Verified","Final Impact Fee","Final Impact Fee assessed.  Impact Cap Locked","Lock"); closeTask("Assess Impact Fee","FINAL FEE","Closed via script",""); closeTask("Closure","Closed","Closed via script",""); capId = holdId;
wfTask == "Application Intake" && wfStatus == "Accepted" ^ closeTask("Application Intake","Accepted"); updateTask("Plan Distribution","Plans Received to Route");