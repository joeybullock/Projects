true ^ crdtCaps = new Array(); baseTtl = 0; baseFireTtl=0; basePoliceTtl=0; baseParkTtl=0; baseTransTtl=0; nASIT=new Array(); pFeeCode ="";
true ^ baseFAsiT = loadASITable("PROPOSED BASE FEES"); for(a in baseFAsiT) branch("ImpactFees:CalcBase"); baseTtl= (baseFireTtl+basePoliceTtl+baseParkTtl+baseTransTtl); comment("Total Base: "+baseTtl);
true ^ editAppSpecific("Total Base Fees",baseTtl);editAppSpecific("Total Base Fire EMS",baseFireTtl);editAppSpecific("Total Base Park",baseParkTtl);editAppSpecific("Total Base Police",basePoliceTtl);editAppSpecific("Total Base Transport",baseTransTtl);
true ^ prevUTtl=0; prevUFireTtl=0; prevUPoliceTtl=0; prevUParkTtl=0; prevUTransTtl=0;
true ^ prevUFAsiT = loadASITable("PREVIOUS USE ADJUSTMENTS"); for(b in prevUFAsiT) branch("ImpactFees:CalcPrevUse"); prevUTtl= (prevUFireTtl+prevUPoliceTtl+prevUParkTtl+prevUTransTtl); comment("Total Previous: "+prevUTtl);
true ^ editAppSpecific("Total Previous Use Fees",prevUTtl);editAppSpecific("Total Previous Use Fire EMS",prevUFireTtl);editAppSpecific("Total Previous Use Parks",prevUParkTtl); editAppSpecific("Total Previous Use Police",prevUPoliceTtl); editAppSpecific("Total Previous Use Transport",prevUTransTtl);
(baseFireTtl>prevUFireTtl) ^ adjBFireTtl = new Number(baseFireTtl-prevUFireTtl) ^ adjBFireTtl = 0;
(baseParkTtl>prevUParkTtl) ^ adjBParkTtl=new Number(baseParkTtl-prevUParkTtl) ^ adjBParkTtl=0;
(basePoliceTtl>prevUPoliceTtl) ^ adjBPoliceTtl=new Number(basePoliceTtl-prevUPoliceTtl) ^ adjBPoliceTtl=0;
(baseTransTtl>prevUTransTtl) ^ adjBTransTtl=new Number(baseTransTtl-prevUTransTtl) ^adjBTransTtl=0;
true ^ editAppSpecific("Total Adj Base Fire EMS",adjBFireTtl); editAppSpecific("Total Adj Base Parks",adjBParkTtl); editAppSpecific("Total Adj Base Police",adjBPoliceTtl); editAppSpecific("Total Adj Base Transport",adjBTransTtl); editAppSpecific("Total Adj Base Fees",(adjBFireTtl+adjBParkTtl+adjBPoliceTtl+adjBTransTtl) );
true ^ netTtl=0; netFireTtl=adjBFireTtl; netPoliceTtl=adjBPoliceTtl; netParkTtl=adjBParkTtl; netTransTtl=adjBTransTtl;
true ^ adjExmtAsiTs=new Array(); adjExmtAsiT = loadASITable("ADJUSTMENTS EXEMPTIONS"); sortASITableArr(adjExmtAsiT,"Priority"); removeASITable("ADJUSTMENTS EXEMPTIONS"); for(y in adjExmtAsiT) branch("ImpactFees:CalcadjExmt");
true ^ if(netFireTtl<0)netFireTtl=0;if(netPoliceTtl<adjBPoliceTtl)netPoliceTtl=0; if(netParkTtl<0)netParkTtl=0; if(netTransTtl<0)netTransTtl=0; editAppSpecific("Total Net Adj Fire EMS",netFireTtl); editAppSpecific("Total Net Adj Parks",netParkTtl); editAppSpecific("Total Net Adj Police",netPoliceTtl); editAppSpecific("Total Net Adj Transport",netTransTtl); netTtl= (netFireTtl+netPoliceTtl+netParkTtl+netTransTtl); editAppSpecific("Total Net Adj Fees",netTtl);
true ^ creditTtl=0; creditFireTtl=0; creditPoliceTtl=0; creditParkTtl=0; creditTransTtl=0;
true ^ creditAsiT = loadASITable("CREDITS"); for(d in creditAsiT) branch("ImpactFees:CalcCredits"); for(e in crdtCaps) comment(crdtCaps[e]); creditTtl= (creditFireTtl+creditPoliceTtl+creditParkTtl+creditTransTtl); comment("Total Credit: "+creditTtl);
true ^ editAppSpecific("Total Credit Fees",creditTtl); editAppSpecific("Total Credit Fire EMS",creditFireTtl); editAppSpecific("Total Credit Parks",creditParkTtl); editAppSpecific("Total Credit Police",creditPoliceTtl); editAppSpecific("Total Credit Transport",creditTransTtl);
(netFireTtl>creditFireTtl) ^ netFireDue=(netFireTtl-creditFireTtl) ^ netFireDue=0;
(netPoliceTtl>creditPoliceTtl) ^ netPoliceDue=(netPoliceTtl-creditPoliceTtl) ^ netPoliceDue= 0;
(netParkTtl>creditParkTtl) ^ netParkDue=(netParkTtl-creditParkTtl) ^ netParkDue=0;
(netTransTtl>creditTransTtl) ^ netTransDue=(netTransTtl-creditTransTtl) ^ netTransDue=0;
true ^ netTtlDue=(netFireDue+netPoliceDue+netParkDue+netTransDue); editAppSpecific("Net Fire EMS",netFireDue); editAppSpecific("Net Parks Fees",netParkDue); editAppSpecific("Net Police Fees",netPoliceDue); editAppSpecific("Net Transport Fees",netTransDue); editAppSpecific("Net Total Due",netTtlDue);
true ^ updateTask("Assess Impact Fee",{Calculation Type},"Updated via Script",""); updateAppStatus({Calculation Type},"");
true ^ if(matches({Parks Service Area},"southside","Southside")) pFeeCode = "IMP-PARKSS"; if(matches({Parks Service Area},"northside","Northside")) pFeeCode = "IMP-PARKSN"; if(matches({Parks Service Area},"westside","Westside")) pFeeCode = "IMP-PARKSW";
true ^ updateFee("IMP-TRANS","BOB_IMPACT","FINAL",{Net Transport Fees},"N","N"); if(pFeeCode != "") updateFee(pFeeCode,"BOB_IMPACT","FINAL",{Net Parks Fees},"N","N"); updateFee("IMP-FIRE","BOB_IMPACT","FINAL",{Net Fire EMS},"N","N"); updateFee("IMP-POLICE","BOB_IMPACT","FINAL",{Net Police Fees},"N","N");
{Calculation Type} == "FORMAL EST" && getParent() ^ editTaskSpecific("Building Plan Review","Impact Fees Assessed","Assessed",getParent());
{Calculation Type} == "FORMAL EST" && !(getParent()) && {Building Permit #} !=null ^ addParent({Building Permit #}); if(getParent()) editTaskSpecific("Building Plan Review","Impact Fees Assessed","Assessed",getParent());